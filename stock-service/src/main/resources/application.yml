server:
  port: ${APPLICATION_PORT}
spring:
  application:
    name: stock-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${RDBMS_URL}/stock-discuss?allowPublicKeyRetrieval=true&useSSL=false&serverTimezon=Asia/Seoul&characterEncoding=UTF-8
    username: ${RDBMS_USERNAME}
    password: ${RDBMS_PASSWORD}
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 1000
#        format_sql: true
#        highlight_sql: true
#        show_sql: true
#  kafka:
#    bootstrap-servers:
#      - 127.0.0.1:19092
#      - 127.0.0.1:19093
#      - 127.0.0.1:19094
kafka:
  bootstrapServers: '127.0.0.1:19092,127.0.0.1:19093,127.0.0.1:19094'
#    consumer:
#      group-id: stock-service-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      max-poll-records: 500
#      fetch-max-wait: 300
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka-server:8761/eureka
redis:
  host: ${REDIS_HOST}
  port: ${REDIS_PORT}

#logging:
#  level:
#    org:
#      hibernate:
#        SQL: debug

